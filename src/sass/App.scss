@use 'variables';
@use 'reusables';

@mixin center-flex($direction: row,$main: center, $cross: center) {
    display: flex;
    flex-direction: $direction;
    justify-content: $main;
    align-items: $cross;
}
@mixin floating-box($blurPx: 55px){
    border-radius: 10px;
    background-color: variables.$lightColorShade;
    box-shadow: 8px 15px $blurPx -5px gray;
}
@mixin section-height() {
    height: variables.$fullHeight;
}
@mixin buttonComp($bkgCol: transparent) {
    cursor: pointer;
    box-sizing: border-box;
    background-color: $bkgCol;
    border: 1px solid black;
    border-radius: 5px;
    padding: 7px;
    font-size: 120%;
}
input[type=number]::-webkit-inner-spin-button, 
input[type=number]::-webkit-outer-spin-button { 
  -webkit-appearance: none; 
  margin: 0; 
}

body, html {
    height: 100%;
}
a, a:visited{
    color: variables.$lightColor;
    text-decoration: none;
}
li{
    list-style: none;
    display: inline-block
}
svg{
    transition: all 0.6s;
    cursor: pointer;
    vertical-align: middle;
}
svg:hover{
    transform: scale(1.2);
}

.App{
    @include center-flex(column, flex-start);
    min-height: 100vh;
}
//generic classes
.icon-btn{
    background-color: transparent;
    border: 0;
}
.ellipseText{
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}
.spinnerStart{
    align-self: flex-start;
}
.spinnerCenter{
    align-self: center;
}
.spinnerContainerCenter{
    margin-top: 12px;
    align-self: center;
}
.smallSpinner {
    margin-top: 22px;
    align-self: flex-start;
}
.retryBtn {
    box-sizing: border-box;
    background-color: variables.$lightColor;
    padding: 3px;
    border-radius: 5px;
    border: 1px solid variables.$darkColor;
    color: variables.$darkColor;
}

//confirmMessage
//la clase closeBtn esta con las clases del dialog de producto
.confirmMsg{
    width: 400px;
    height: 150px;
    box-sizing: border-box;
    padding: 8px;
    @include center-flex(column, space-between, flex-start);
    p{
        margin: 0;
        margin-top: 4px;
    }
    .closeBtn{
        right: 2px;
        top: 2px;
    }
}
.confirmBtns{
    width: 100%;
    @include center-flex(row, space-evenly, flex-start);
    gap: 12px;
    button{
        cursor: pointer;
        border-radius: 8px;
        border: 1px solid black;
        width: 100%;
        padding: 10px 6px;
        font-weight: bold;
        background-color: transparent;
        .confirmBtnLabel{
            display: inline-block;
            transition: transform 0.4s ease-in-out;
        }
        &:hover .confirmBtnLabel{
            transform: scale(1.25);
        }
    }
    button:first-of-type{
        background-color: variables.$secondColorShade;
        color: variables.$lightColorShade;
    }
}
.enumProdDialog{
    width: 600px;
    height: 180px;
}
.deleteProdDialog{
    width: 600px;
    height: 180px;
    button:first-of-type{
        background-color: variables.$cancelColor;
        color: variables.$darkColor;
    }
}
.actionsDialog{
    width:750px;
    height: 180px;
}
.confirmDeleteProductDialog{
    width:630px;
    height: auto;
    gap:5px
}
//carousel
.swiper-slide{
    height: auto !important;
}
.swiperContainer{
    width: 500px;
}
.title{
    font-size: variables.$titleFontSize;
}
.separator{
    height: 2px;
    background-color: variables.$secondColor;
    margin-top: 12px;
    width: 120%;
    margin-left: -12px;
}

//icon classes
.logout-btn{
    color: variables.$lightColor;
    font-size: 120%;
    position: absolute;
    top: 1%;
    right: 0.5%;
    border: 1px solid variables.$lightColor;
    border-radius: 5px;
}
//navbar
.navBar{
    @include center-flex(column, space-between, flex-start);
    min-height: variables.$navBarHeight;
    width: 100%;
    background-color:variables.$secondColor;
    z-index: 3;
}
.navBarSimple {
    justify-content: center;
    h1{
        margin: 0;
    }
}
h1{
    margin: 0;
    color: variables.$lightColor;
    box-sizing: border-box;
    margin-top: 12px;
    padding: 0 variables.$lateralPadding;
}
.menu,.searchBarContainer {
    @include center-flex(row, space-between, flex-end);
    width: 100%;
    padding: 0 variables.$lateralPadding;
    justify-self: flex-end;
    box-sizing: border-box;
    margin: 0 0 12px 0;
    font-size: 1.4rem;
    color: variables.$lightColor;

}
.menu{
    position: relative;
    overflow: visible;
}
.rightSide{
    justify-self: flex-end;
    @include center-flex();
    gap: 12px;
    height: 29px;
}
.categories {
    @include center-flex(row, flex-start);
    padding: 0;
    margin: 0;
    width: 100%;
    overflow: hidden;
    li{
        cursor: pointer;
        transition: 0.3s;
    }
    li:hover{
        color:variables.$thirdColor;
    }
}
li{
    padding-right: 5px;
}
.activeCategory{
    color: variables.$thirdColor;
}
.more-btn {
    box-sizing: border-box;
    cursor: pointer;
    padding: 0;
    border: none;
    border-radius: 5px;
    background-color: variables.$lightColor;
    color: variables.$secondColor;
    transition: all 0.3s;
    height: 100%;
    aspect-ratio: 1/1;
    position: relative;
    overflow: visible;
    @include center-flex();
    &:hover { color: variables.$thirdColor; background-color: transparent;}
}
.more-btn.rotated-btn{
    svg{
        position: absolute;
        width: 28px;
        height: 28px;
        transform: rotate(90deg);
    }
}
.popoverCats{
    box-sizing: border-box;
    padding: 8px;
    width: fit-content;
    font-size: 120%;
    @include center-flex(column, flex-start, flex-start);
    gap: 4px;
    li{
        cursor: pointer;
        transition: 0.3s;
    }
    li:hover{
        color:variables.$thirdColor;
    }
}
.popoverCategory{
    // display: block;
}
.searchBarContainer {
    color: variables.$secondColor;
    background-color: variables.$lightColor;
    margin: 0;
    padding: 6px variables.$lateralPadding;
    z-index: 1;
    box-shadow: 0 4px 5px -5px gray;
}
.searchBar{
    transition: all 0.7s;
    box-sizing: border-box;
    padding: 6px;
    border-radius: 5px;
    background-color: #fff;
    margin: 3px 0;
    width: 40%;
}
.searchBarFilterInfo{
    box-sizing: border-box;
    background-color: variables.$lightColor;
    @include center-flex(row, flex-start, flex-start);
    gap: 12px;
    width: 100%;
    overflow: hidden;
    padding: 0 variables.$lateralPadding;
    max-height: 0;
    transition: all 0.7s ease;
}
.searchBarFilterInfo.active{
    max-height: 200px;
    padding: 0 variables.$lateralPadding;
    padding-top: 12px;
    padding-bottom: 0;
}
.activeFilter{
    margin: 0;
    border-radius: 5px !important;
    padding: 1px 3px;
    background-color: variables.$lightColorShade;
    @include floating-box();
    button{
        border: none;
        padding: 0 0 5px 3px;
        background-color: transparent;
        font-size: 75%;
        vertical-align: middle;
    }
}
.searchBarExtras{
    display: flex;
    gap: 8px;
    align-self: center;
}
.popoverFilter{
    box-sizing: border-box;
    width: 100%;
}
.filterOptions{
    color: variables.$darkColor;
    padding: 8px;
    // width: 50%;
}
.filterTitle{
    margin-bottom: 0;
    font-weight: bold;
}
.editorOptions{
    box-sizing: border-box;
    background-color: variables.$lightColor;
    @include center-flex(row, flex-start, center);
    width: 100%;
    padding: 6px variables.$lateralPadding;
}
.editorFiltersForm{
    @include center-flex(row, flex-start, center);
    gap: 8px;
    flex: 1 1 auto;
    &.visibleCheckboxes{
        //ver si agrego el flex acá
    }
}
.editorFilterTitle{
    min-width: 0;
    overflow: hidden;
    margin-right: 12px;
    flex: 0 0 auto;
    p{
        margin: 0;
        font-size: clamp(1rem, 2.5vw, 1.25rem);
    }
    &.allHidden {
        flex: 1 1 0;
        overflow: hidden;
        p{
            display: block;
            width: 100%;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }
    }
}
//signup and login section
.logSection,
.resetPwdSection{
    @include center-flex(column, flex-start, center);
    width: 100%;
    box-sizing: border-box;
    height: variables.$fullHeight;
    padding: variables.$lateralPadding;
    // gap: 12px;
    h3{
        font-size: 150%;
        margin: 0;
        margin-bottom: 12px;
    }
}
.signupContainer{
    @include floating-box(35px);
    width: 100%;
    max-width: 400px;
    margin-top: 48px;
    box-sizing: border-box;
    padding: 12px;
    background-color: white;
}
.signForm{
    @include center-flex(column,flex-start,flex-start);
    gap: 12px;
    button{
        align-self: flex-end;
    }
}
.forgotPwdBtn{
    align-self: flex-start !important;
    margin-top: 6px;
    border: none;
    background-color: transparent;
    color: variables.$secondColor;
    text-decoration: underline;
    text-underline-offset: 2px;
    cursor: pointer;
    &:hover{
        filter: brightness(1.4);
        text-shadow:
        0 0 2px rgba(255, 255, 255, 0.8),
        0 0 4px rgba(255, 255, 255, 0.6),
        0 0 8px rgba(255, 255, 255, 0.4);
    }
}
//resetpwd
.pwdResetContainer{
    box-sizing: border-box;
    @include floating-box(85px);
    padding: 12px;
    border-color: white !important;
    display: grid;
    grid-template-columns: max-content minmax(0, 400px);
    row-gap: 1rem;
    column-gap: 1rem;
    align-items: center;
}
/* Que el título abarque ambas columnas (opcional si ya lo tienes) */
.pwdResetContainer > *:not(:first-of-type) {
    display: contents !important;
}
.pwdResetContainer > .newUserTitle {
  grid-column: 1 / -1;
  width:100%;
}
.pwdResetContainer > :last-of-type{
    grid-column: 1 / -1;
    width: 100%;
}
//************************************************* REUSABLES **********************************************************
.linksContainer {
    @include center-flex();
    gap: 12px;
}
.madeContainer {
    @include center-flex();
    p {
        margin: 0;
    }
}
// layout
.productsLayout{
    width:100%;
    background-color: variables.$lightColor;
    box-sizing: border-box;
    padding: variables.$lateralPadding;
    overflow-y: auto;
    // @include center-flex(row, flex-start, flex-start);
    @include center-flex(column, flex-start, flex-start);
    @include section-height();
    flex: 1;
    flex-wrap: wrap;
    gap: 12px;
}
.productsLayoutList{
    box-sizing: border-box;
    width: 100%;
    padding: variables.$lateralPadding;
    padding-top: 0;
    min-height: variables.$fullHeight;
    background-color: variables.$lightColor;
    @include center-flex(column, flex-start, flex-start);
    padding-bottom: calc(variables.$footerHeight + 12px);
}
.virtItem{
    padding-bottom: 12px;
}
.productsGridList {
    display: grid;
    grid-template-columns: repeat(4, minmax(0, 1fr));
    gap: 24px;
}
.productsGridItem {
    width: 100% !important;
}
.productView {
    box-sizing: border-box;
    //revisar la transicion si queda bien
    transition: all 0.3s;
    background-color: whitesmoke;
    display: flex;
    height: 220px;
    @include floating-box(20px);
    p:first-of-type {
        transition: transform 0.4s, color 0.4s;
        transform-origin: left center;
    }
    &:hover {
        cursor: pointer;
        p:first-of-type{
            transition: 0.4s;
            color: variables.$secondColor;
            transform: scale(1.05);
        }
    }
    position: relative;
}
.productList{
    width: 100%;
}
.productGrid{
    height: auto;
    aspect-ratio: 1/1;
    flex-direction: column;
    .editIconContainer{
        box-sizing: border-box;
        border-radius: 10px;
        border: none;
        position: absolute;
        top: 5px;
        right: 5px;
        z-index: 10;
        padding: 6px;
        margin: 0;
        @include floating-box();
        background-color: variables.$darkColorOpacity;
    }
    .productInfo{
        margin: 0 12px;
        p:first-of-type{
            margin: 0;
        }
    }
    .productImgContainer{
        width: 100%;
        aspect-ratio: 1/1;
        overflow: hidden;
    }
    .productImg {
    width: 100%;
    height: 100%;
    object-fit: cover;
}
}
.productImgContainer{
    height: 100%;
}
.productImg {
    height: 100%;
    aspect-ratio: 1/1;
    object-fit: cover;
}
.productInfo{
    margin-left: 12px;
    flex: 1;         // Permite que se expanda/reduce en el layout flex
    min-width: 0;    // Crucial: permite que el contenido se reduzca y se active el overflow
    p{
        margin: 0;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        width: 100%;
        display: block;
    }
    p:first-of-type {
        font-size: variables.$titleFontSize;
        margin: 12px 0;
    }
    p:not(:first-of-type) {
        margin: 8px 0;
    }
}

//product dialog, es la vista en detalle del producto
.productCard{
    // height: 90vh;
    @include center-flex(row,flex-start,flex-start);
    p{
        margin: 0;
    }
}
.closeBtn {
    position: absolute;
    right: 8px;
    top: 8px;
    font-size: 300%;
    z-index: 15;
    &:hover{
        transform: none;
    }

}
.productDetailImg{
    height: 100%;
    width: 100%;
    // object-fit: contain;
    object-fit: cover;
    aspect-ratio: 1/1;
}
.productDetails{
    @include center-flex(column, flex-start, flex-start);
    box-sizing: border-box;
    padding: 0 12px;
    width: 100%;
    gap: 6px;
    overflow-y: auto;
    max-height: 80vh;
    & > * {
        width: 100%;
        color: variables.$darkColor;
    }
}
.productCardFieldTitle{
    font-size: 1.4rem !important;
}
.productDetailCategory{
    font-size: 0.9rem;
}
.productDetailName{
    margin: 0;
    font-size: 3rem;
    color: variables.$darkColor;
    font-weight: normal;
    width: 100%;
    border-bottom: 2px solid rgba(169, 169, 169, 0.297);
}
.productDetailPrice{
    p{
        font-size: 1.8rem !important;
    }
}
.productDetailColors{
}
.productDetailAmount{
}
.productDetailAvailableUnits{
    margin-left: 6px;
}
.productDetailDescr{
    p:first-of-type{
        margin-bottom: 6px;
    }
    p:last-of-type{
        width: 100%;
        box-sizing: border-box;
        padding: 0 12px;
        min-height: 100px;
        border-radius: 5px;
        border: 1px solid rgba(169, 169, 169, 0.297);
    }
}
.colorBtn{
    margin-right:8px;
    margin-bottom: 8px;
    background-color: #fff;
    border: 0;
    font-size: 140%;
    border-radius: 5px;
    padding: 8px;
    cursor: pointer;
}
.activeColorBtn{
    transition: all 0.2s;
    background-color: variables.$secondColor;
    color: variables.$lightColor;
}

.addToCartBtn{
    margin-top: 12px;
    margin-bottom: 4px;
    border:0;
    background-color: variables.$secondColor;
    color: variables.$lightColor;
    font-size: 140%;
    border-radius: 5px;
    padding: 8px;
    cursor: pointer;
    transition: all 0.7s;
    &:hover{
        transform: scale(0.97);
    }
}

//las partes del prod card que ve el admin
.editIconContainer{
    @include center-flex();
    border-left: 2px solid black;
    padding: 0 24px;
    margin-left: auto;
    font-size: calc(variables.$titleFontSize * 2);
}
.prodModIcons{
    margin-left: auto !important;
    height: 100%;
    align-self: center;
    display: flex;
    margin-left: 12px;
    height: 50%;
    svg{
        vertical-align: middle;
        align-self: center;
        margin: 0 6px;
    }
}
.editBtn{
    color: variables.$thirdColor;
}
.deleteBtn{
    color: red;
}

//cart prod items
.cartContainer{
    @include center-flex(row, space-between, flex-start);
    width: 100%;
    flex: 1;
    gap: variables.$lateralPadding;
    box-sizing: border-box;
    padding: variables.$lateralPadding;
}
.cartProducts{
    box-sizing: border-box;
    @include center-flex(column, flex-start, flex-start);
    width: 70%;
    gap: 12px;
    @include floating-box();
    p{
        margin: 10px 0;
    }
}
.cartProdItem{
    box-sizing: border-box;
    padding: 12px;
    width: 100%;
    display: flex;
    flex-direction: row;
    justify-content: space-between;
}
.cartProdInfoLeft{}
.cartProdInfoRight{
    display: flex;
    flex-direction: column;
}
.cartResumeDetails,
.cartResumeTitle{
    @include center-flex(column, flex-start, flex-start);
    width: 100%;
}
.cartMsgInfoBox {
    font-size: 0.8em;
    font-style: italic;
    margin-top: 6px;
}

.cartProdItemDetail{
    @include center-flex(column, flex-start, flex-start);
    button{
        padding: 0px 8px;
        align-self: center;
        margin: 0 12px;
        border-radius: 10px;
        border: 1.5px solid variables.$secondColor;
        vertical-align: middle;
        background-color: transparent;
        color: variables.$secondColor;
        font-weight: bold;
        font-size: 1.5rem;
        cursor: pointer;
        transition: all 0.7s;
        &:hover{
            transform: scale(1.1);
        }
    }
}
.cartProdAmount{
    @include center-flex(column, flex-start, flex-end);
    position: relative;
}
.cartQuantityControls{
    @include center-flex(row, flex-start, center);
}
.cartProdItemError{
    margin: 0 !important;
    font-size: 0.85rem;
    color: variables.$cancelColorDark;
    text-wrap: wrap;
    z-index: 10;
}
.cartProdPrice{
    @include center-flex(row, flex-end, flex-end);
    width: 100%;
}
.cartProdTotalAmount{
    display: flex;
    align-self: flex-end;
}
.cartProdItemSeparator{
    box-sizing: border-box;
    width: 95%;
    height: 2px;
    align-self: center;
    justify-self: center;
    margin: 12px 0;
    background-color: variables.$lightColor;
}
.cartResume{
    box-sizing: border-box;
    max-width: 30%;
    @include floating-box();
    flex: 1;
    padding: variables.$lateralPadding;
    align-self: stretch;
    justify-self: flex-end;
    @include center-flex(column, space-between, space-between);
    h4{
        margin: 0;
    }
}
.cartResumeInfo,
.cartResumeTotalProducts,
.cartResumeFinalAmount {
    width: 100%;
    display: flex;
    flex-direction: row;
    justify-content: space-between;
}
.cartBtn{
    box-sizing: border-box;
    padding: 6px;
    border-radius: 4px;
    font-weight: bold;
    transition: 0.7s all;
    &:hover{
        transform: scale(1.1);
    }
}
.deleteProdItem{
    background-color: transparent;
    border: 1.5px solid variables.$secondColor;
    color: variables.$secondColor;
}
.confirmOrder{
    align-self: flex-end;
    justify-self: flex-end;
    background-color: transparent;
    border: 1.5px solid variables.$secondColor;
    color: variables.$secondColor;
    @include center-flex(row, flex-start, center);
    gap: 6px;
}
.sendOrder{
    align-self: flex-end;
    justify-self: flex-end;
    background-color: variables.$secondColor;
    color: variables.$lightColor;
}
.cartBtn.confirmOrder:disabled,
.cartBtn.sendOrder:disabled{
    cursor: not-allowed;
    opacity: 0.7;
    &:hover{
        transform: none;
    }
}

//----------------------------------------------------------------------------------new product
.newProductContainer{
    min-height: variables.$fullHeight;
    height: fit-content;
    padding: 12px 0;
    width: 100%;
    background-color: variables.$lightColorShade;
    @include center-flex(row, space-evenly, flex-start);
}
.formTitleContainer{
    width: 100%;
    @include center-flex(row, space-between, flex-start);
}
.formTitle{
    font-size: 150%;
    margin-top: 0;
    margin-bottom: -6px;
}
.deleteProdBtn{
    font-size: 160%;
    background-color: transparent;
    border: none;
    transform: all 0.7s;
    &:hover{
        color: variables.$cancelColor;
    }
}
.productForm{
    box-sizing: border-box;
    @include center-flex(column, center, flex-start);
    @include floating-box();
    padding: variables.$lateralPadding;
    gap: 12px;
    width: 30vw;
}
.formColorContainer{
    width: 100%;
    @include center-flex(row, flex-start, center);
    gap: 8px;
}
.formColorName{
    @include center-flex(row, flex-start, center);
    gap: 6px;
    p{
        margin: 0;
    }
    button{
        position: absolute;
        border: none;
        background-color: transparent;
        font-size: 120%;
        margin-left: -28px;
        &:hover{
            color: variables.$cancelColor;
        }
    }
}
.imgFormCover {
    border: 10px solid variables.$coverBackground;
}
.enumTitle{
    font-size: 120%;
    margin-bottom: 6px;
    margin-top: 4px;
    font-weight: bold;
    &::first-letter{
        text-transform: uppercase;
    }
}
.fieldsContainer {
    @include center-flex(row, flex-start, flex-start);
    box-sizing: border-box;
    padding: 0 10px;
    gap: 6px;
    flex-wrap: wrap;
    border: 2px dashed variables.$thirdColor;
    border-radius: 5px;
    margin-top: 12px;
    max-height: 150px;
    overflow-y: auto;
    p{
        @include floating-box();
        padding: 8px;
        svg{
            // display: flex;
            justify-self: center;
        }
    }
}
//-----------------------------------------------------------------------------------------------------enumFields
.enumFieldsWrapper {
    box-sizing: border-box;
    padding: variables.$lateralPadding;
    width: 45vw;
    @include center-flex(column, center, flex-start);
    gap: 36px;
    @include floating-box();
}
.enumFieldsContainer{
    width: 100%;
}
.enumFieldsList{
    @include center-flex(row, flex-start, flex-start);
    box-sizing: border-box;
    // overflow: auto;
    // padding: 0 variables.$lateralPadding;
    gap: 12px;
    width: 100%;
}
.enunmFieldsInput{
    width: 70%;
}
.deleteEnumFieldBtn{
    background-color: transparent;
    padding: 4px 0;
    border: 1px solid variables.$secondColor;
    border-radius: 5px;
    font-size: variables.$subtitleFontSize;
}
.editSpanWarning{
    cursor: pointer;
    padding: 2px;
    margin-top: 6px;
    position: relative;
    border-radius: 5px;
    font-size: 80%;
    font-weight: bold;
    padding-left: 2px;
    margin-right: 12px;
    background-color: rgb(126, 0, 0);
    color: variables.$lightColor;
}

.enumFieldsFields{
    box-sizing: border-box;
    padding: variables.$lateralPadding;
    display: grid;
    grid-template-columns: repeat(3, minmax(0, 1fr));
    width: 100%;
    gap: 24px;
    overflow: auto;
    max-height: 200px;
}

.enumField{
    @include floating-box(15px);
    transition: 0.6s all;
    display: flex;
    gap: 6px;
    align-items: center;
    padding: 0 6px;
    flex-wrap: wrap;
    border-radius: 10px;
    width: fit-content;
    p{
        margin: 5px 0;
    }
    svg{
        font-size: 120%;
    }
}
.activeFieldToUpdate{
    // border: 1px solid lightcoral;
    background-color: variables.$secondColor;
    color: variables.$lightColor;
}

//footer

footer{
    box-sizing: border-box;
    @include center-flex(row, space-between, center);
    height: variables.$footerHeight;
    width: 100%;
    background-color: variables.$mainColor;
    padding: 0 variables.$lateralPadding;
    z-index: 30;
}
//------------------------------------------------------------------------------------MY PROFILE
.myProfileContainer{
    @include center-flex();
    @include section-height();
    flex: 1;
    align-items: stretch;
    width: 100%;
}
.myProfileMenuIcon{
    display: none;
}

.optionsList{
    @include center-flex(column,flex-start,flex-start);
    padding: 0 32px 0 variables.$lateralPadding;
    background-color: variables.$lightColorShade;
    transition: all 0.7s;
}//a partir de aca todas las clases debajo hasta donde indique se encuentran adentro de optionsList
.optionsList.activeOptionsList{
    transform: translateX(0);
}
.optionsListBtnContainer{
    @include center-flex(column, flex-start, flex-start);
}
.optionsListBtnUnit{
    box-sizing: border-box;
    padding: 0;
    margin: 8px 0;
    background-color: transparent;
    width: 100%;
    border: none;
    text-align: left;
    cursor: pointer;
    transition: all 0.7s;
    &:hover{
        color: variables.$thirdColor;

    }
}
.optionsListBtnUnit.optionsListBtnUnitActive{
    color: variables.$thirdColor;
}
.relatedData{
    @include center-flex(column, flex-start, center);
    box-sizing: border-box;
    width: 100%;
    flex: 1;
    padding: variables.$lateralPadding;
    transition: all 0.3s ease-in-out;
    position: relative;
    overflow: hidden
}
.overlay{
    position: absolute;
    inset: 0;
    background: rgba(0, 0, 0, 0.3);
    z-index: 15;
}
.relatedData > *:not(.overlay) {
  position: relative;
  z-index: 10;                  /* contenido por debajo del overlay */
}
//my profile
.userInfoForm{
    @include center-flex(column, flex-start, flex-start);
    box-sizing: border-box;
    width: 100%;
    gap: 24px;
    h5{
        margin-bottom: 0;
    }
}
.userInfoForm .userInfoContainer{
    display: contents;
}
.userInformation {
    @include center-flex(column, flex-start, flex-start);
    width: 100%;
    button{
        margin-top: 12px;
        background-color: rgb(193, 255, 234);
    }
}
.userInfoFields {
    margin-top: 12px;
    display: grid;
    grid-template-columns: 
    max-content  /* label col 1 */ 
    minmax(0, 450px)           /* input col 1 */
    max-content  /* label col 2 (usa el mismo max-content) */
    minmax(0, 450px);           /* input col 1 */
    column-gap: clamp(30px, 4vw, 150px);
    column-gap: 1rem;
    row-gap: 1rem;      // espacio vertical entre filas
}
.userPwdInfo{
    margin-top: 12px;
    width: 100%;
}
.userInfoContainer{
    display: grid;
    grid-template-columns: max-content 1fr;
    column-gap: 1rem;
    align-items: center;
}
.userInfoFieldName{
    text-align: right;
}
.userInfoFieldName:first-of-type{
    min-width: 50px;
}
.userInfoTitles{
    @include center-flex(row, center,center);
    font-size: variables.$titleFontSize;
    gap: 12px;
    p{
        margin: 0;
    }
}
.userInfoTitleBtn{
    cursor: pointer;
    font-size: 50%;
    align-self: flex-end;
    margin-bottom: 6px;
    background-color: transparent;
    border: 0;
    transition: transform 0.7s;
    border: 1px solid black;
    border-radius: 5px;
    background-color: rgb(158, 211, 255);
    // z-index: -2;
    svg{
        margin-left: 4px;
        vertical-align: middle;
        margin-bottom: 2px;
        &:hover{
            transform: scale(1);
        }
    }
    &:hover{
        transform: scale(1.1);
    }
}
.userInfoTitleBtn.active{
    background-color: variables.$cancelColor;
}
.userInfoBtn{
    @include buttonComp();
}
.userInfoBtn.updateBtn,
.userInfoBtn.updatePwdBtn{
    background-color: variables.$secondColorShade;
    color: white;
    margin-top: 12px;
    // align-self: flex-end;
}
.pwdChangeContainer{
    display: flex;
    flex-direction: column;
    box-sizing: border-box;
    margin-top: 24px;
    padding: 12px;
    border: 2px dashed black;
    border-radius: 5px;
    width: 700px;
}
.userInfoFieldName.pwdField{
    // flex: 0 0 200px;
    text-align: left;
}
//usersList
.selectedUser {
    font-size: 150%;
}
.currentRoleContainer{
    @include center-flex(row, flex-start, center);
    gap: 12px;
    margin-top: 12px;
    p{
        margin: 0;
    }
    p:first-of-type{
        font-size: 150%;
    }
}
.rolesAvContainer{
    @include center-flex(column, flex-start, flex-start);
    gap: 4px;
    p{
        margin: 0;
    }
}
.rolesAv{
    @include center-flex(row, flex-start, flex-start);
    gap: 12px;
    flex-wrap: wrap;
    width: 100%;
    p{
        box-sizing: border-box;
        margin: 0;
        padding: 4px;
        border: 1px solid variables.$mainColor;
        border-radius: 5px;
        transition: all 0.7s;
    }
}
.activeNewRole{
    background-color: variables.$secondColor;
    color: variables.$lightColor;
    border: none;
}
.rolesBtns{
    @include center-flex(row, flex-end, flex-start);
    margin-top: 12px;
    width: 100%;
    gap: 12px;
    button{
        @include buttonComp();
        transition: all 0.3s;
        border: none;
        &:first-of-type:hover{
            background-color: variables.$cancelColor;
        }
    }
    button:last-of-type{
        background-color: variables.$secondColor;
        color: variables.$lightColor;
        &:hover {
            background-color: variables.$secondColorShade;
        }
    }
}
//filas
.suspendedUser{
    background-color: variables.$lightColorShade;
}
.inactiveUser{
    background-color: variables.$cancelColor;
}
.lockedUser{
    background-color: rgba(128, 0, 128, 0.208);
}
//new user
.newUserContainer{
    @include center-flex(column, flex-start, flex-start);
    width: 100%;
}
.newUserForm{
    display: grid;
    grid-template-columns: max-content minmax(0, 400px);
    row-gap: 1rem;
    column-gap: 1rem;
    align-items: center;
    width: fit-content;
    .updateBtn {
        grid-column: 2;       // ubica el botón en la segunda columna del grid
        justify-self: end;    // lo alinea al final (derecha) de esa celda
    }
}
.newUserContainer .userInfoContainer {
  display: contents;
}
//user actions
.userActionsContainer{
    @include center-flex(column, flex-start, flex-start);
    box-sizing: border-box;
    width: 100%;
    gap: 48px;
}
.userAction {
  position: relative;
  border: 1px solid variables.$secondColor;
  padding: 24px 12px 12px;
  box-sizing: border-box;
  min-width: 400px; // Ajustalo según lo que necesites
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 8px;

  p {
    position: absolute;
    top: -0.6em;
    left: 12px;
    background-color: white; // O el fondo de tu app
    padding: 0 6px;
    margin: 0;
    font-size: 0.9em;
    color: variables.$secondColor;
    white-space: nowrap; // <- esto evita el salto de línea
    max-width: calc(100% - 24px); // por si querés evitar overflow
    overflow: hidden;
    text-overflow: ellipsis;
    font-weight: bold;
  }

  button {
    width: 100%;
    padding: 12px;
    font-size: 1em;
    cursor: pointer;
    border: 2px solid variables.$cancelColor;
    border-radius: 8px;
    background-color: variables.$cancelColorOpacity;
    font-weight: bold;
    transition: 0.7s all;
    &:hover{
        transform: scale(1.03);
    }
  }
}

//----------------------------------------------------------------------------------NOT FOUND
.notFoundPageContainer{
    background-color: variables.$lightColor;
    width:100%;
    box-sizing: border-box;
    padding: variables.$lateralPadding;
    @include center-flex(row, flex-start, flex-start);
    @include section-height();
    flex: 1;
    flex-wrap: wrap;
    gap: 12px;
}
.notFoundPageInfo{
    @include center-flex(column, flex-start, flex-start);
    h3{
        color: variables.$darkColor;
    }
    a{
        vertical-align: middle;
        color: variables.$secondColor;
        text-decoration: underline;
        font-weight: bold;
        transition: all 0.7s;
        &:hover{
            transform: scale(1.1);
        }
    }
}

//MEDIA QUERIES

//--------------------------------------------------------- LAPTOP
@media (max-width: variables.$md) {//1200
    .productsLayout{
        gap: 18px;
    }
    //acá ajustar los de grilla
    .productsGridList {
        grid-template-columns: repeat(3, minmax(0, 1fr));
        gap: 18px;
    }
    .swiperContainer{
        width: 400px;
    }
    .productDetailName{
        font-size: 2.2rem;
        margin-bottom: 0;
    }
    .searchBar{
        width: 60%;
    }
    .productDetails{
        max-height: 400px;
        gap: 4px;
    }
    .productCardFieldTitle{
        font-size: 1.2rem;
    }
}

//--------------------------------------------------------- TABLET
@media (max-width: variables.$sm) {//900
    .searchBarContainer, .menu,
    h1, .optionsList, .editorOptions, footer{
        padding: 0 calc(variables.$lateralPadding / 2);
    }
    .productsLayout, .productsLayoutList, .notFoundPageContainer, .cartContainer{
        padding: calc(variables.$lateralPadding / 2);
    }
    .productList {
        height: 150px;
    }
    .productInfo{
        margin-left: 8px;
        p{
            margin: 0;
        }
        p:first-of-type {
            margin: 6px 0;
        }
        p:not(:first-of-type) {
            margin: 4px 0;
        }
    }
    .editIconContainer{
        padding: 0 calc(variables.$lateralPadding / 2);
        font-size: variables.$titleFontSize;
    }
    .productsGridList {
        grid-template-columns: repeat(2, minmax(0, 1fr));
        gap: 12px;
    }
    .productCard{
        flex-direction: column;
    }
    .productDetails{
        padding-bottom: 12px;
        max-height: none;
        box-sizing: border-box;
        width: 100%;
    }
    .productDetailCategory{
        position: absolute;
        right: 12px;
    }
    .swiperContainer{
        width: 350px;
    }
    .newProductContainer{
        flex-direction: column;
        gap: 24px;
        align-items: center;
    }
    .productForm, .enumFieldsWrapper{
        width: 80%;
    }
    .enumFieldsList{
        flex-direction: column;
        align-items: flex-start;
    }
    .enunmFieldsInput{
        display: flex;
        align-items: center;
        flex-wrap: nowrap; // Evita que se haga wrap
        width: 100%;
    }
    .enunmFieldsInput > *:first-child {
        flex: 1;
        margin-right: 8px;
    }
    .enunmFieldsInput > button {
        flex-shrink: 0;
    }
    .enumFieldsAutocomp {
        width: 100%;
        display: flex;
        flex-direction: column;
        align-items: stretch;
    }
    .deleteEnumFieldBtn {
        width: 100%;
        margin-top: 8px;
    }
    .searchBar{
        width: 80%;
    }
    .myProfileMenuIcon{
        z-index: 10;
        display: flex;
        position: relative;
        position: absolute;
        top: 90px;
        left: 12px;
        font-size: 150%;
        color: variables.$lightColor;
    }
    .pwdChangeContainer{
        width: 100%;
    }
    .optionsList{
        position: absolute;
        top: variables.$navBarHeight;
        bottom: variables.$footerHeight;
        left: 0;
        transform: translateX(-100%);
        z-index: 18;
        overflow-y: auto;
    }
    .userInfoFields{
        width: 100%;
        grid-template-columns: auto minmax(0, 1fr);
    }
    .cartContainer{
        flex-direction: column;
        width: 100%;
    }
    .cartProducts{
        width: 100%;
    }
    .cartResume{
        max-width: none;
        width: 100%;
    }
}

//--------------------------------------------------------- MOBILE
@media (max-width: variables.$xs) {//600
    .productList {
        height: 100px;
    }
    .productInfo{
        margin-left: 4px;
        p{
            margin: 0;
        }
        p:first-of-type {
            font-size: variables.$responsiveTitle;
            margin: 3px 0;
        }
        p:not(:first-of-type) {
            margin: 2px 0;
        }
        p:last-of-type {
            display: none;
        }
    }
    .editIconContainer{
        padding: 0 calc(variables.$lateralPadding / 4);
        font-size: calc(variables.$titleFontSize / 1.2);
    }
    .swiperContainer{
        width: 350px;
    }
    .userInfoContainer.pwdUserInfoContainer{
        display: grid;
        grid-template-columns: auto;
        column-gap: 1rem;
        align-items: center;
    }
    .pwdResetContainer{
        grid-template-columns: 1fr;
    }
    .pwdResetContainer > *:not(:first-of-type) {
        display: grid !important;
        p{
            text-align: left;
        }
    }
    .cartProdItem{
        flex-direction: column;
        gap: 12px;
    }
    .cartProdPrice{
        justify-content: flex-start;
    }
    .cartProdTotalAmount{
        align-self: flex-start;
    }
    .cartProdAmount{
        align-items: flex-start;
    }
}

@media (max-width: 400px) {
    .swiperContainer {
        width: 250px;
    }
        .searchBarContainer, .menu,
    h1, .optionsList, .editorOptions, footer{
        padding: 0 calc(variables.$lateralPadding / 8);
    }
    .productsLayout, .productsLayoutList, .notFoundPageContainer, .cartContainer{
        padding: calc(variables.$lateralPadding / 8);
    }
    .relatedData{
        padding: 0 calc(variables.$lateralPadding / 5);
        padding-top: 12px;
    }
    .userActionsContainer{
        padding-top: 12px;
    }
    .userAction{
        min-width: 0;
        width: 100%;
    }
}

@media (max-width: 320px) {
    .swiperContainer {
        width: 150px;
    }
}

@media (max-width: 250px){
    .productsLayout{
        justify-content: center;
    }
    .productGrid{
        width: 90%;
    }
    .productsGridList {
        grid-template-columns: 1fr;
    }
    .userInfoFieldName{
        text-align: justify;
    }
    .userInfoFields{
        grid-template-columns: auto;
    }
}
//revisar si agregar alguna media query más para mayor a lg